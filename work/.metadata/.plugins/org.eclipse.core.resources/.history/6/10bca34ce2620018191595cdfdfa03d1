package algo.programmers;


public class KakaoFreindsColoringBook {
	
	int sizeOfOneArea = 0;
	
	public void floodFill(int x, int y, int c, int[][] picture){
		
		if( c != picture[x][y]){
			return;
		}
		sizeOfOneArea++;
		picture[x][y] = 0;
		floodFill(x+1, y, c, picture);
		floodFill(x, y+1, c, picture);
		floodFill(x-1, y, c, picture);
		floodFill(x, y-1, c, picture);
		
		
	}
	public int[] solution(int m, int n, int[][] picture) {
		int numberOfArea = 0;
		int maxSizeOfOneArea = 0;

		int[][] copyOfPicture = new int[m+2][n+2];
		for(int i=0; i<m; i++){
			for(int j=0; j<n; j++){
				copyOfPicture[i+1][j+1] = picture[i][j];

			}
		}

		for(int i=1; i<m+1; i++){
			for(int j=1; j<n+1; j++){
				if(copyOfPicture[i][j] !=0){
					floodfill(i,j,copyOfPicture[i][j],copyOfPicture);
				}
			}
		}
		
		int[] answer = new int[2];
		answer[0] = numberOfArea;
		answer[1] = maxSizeOfOneArea;
		return answer;
	}
}

